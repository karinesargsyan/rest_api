{"name": "Get method check in case of a correct payload", "status": "failed", "statusDetails": {"message": "AssertionError: FAILURE: New json was not added\nassert 179 == 180\ntests/test_cases.py:67 in test_get() -> check.equal(final_size, initial_size+1, \"New json was not added\")\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\n@allure.title(\"Get method check in case of a correct payload\")\n    def test_get():\n        try:\n            random_payload = {\n            \"timestamp\": time.time(),\n            \"number\": random.randint(1, 100)\n            }\n            response = request.get()\n            initial_size = len(response.json())\n            #response_post=request.post(json.dumps(random_payload))\n            response = request.get()\n            response_body = response.json()\n            final_size = len(response_body)\n    \n            check.equal(final_size, initial_size+1, \"New json was not added\")\n            del response_body[final_size-1]['_id']\n>           check.equal(response_body[final_size],random_payload,\"Last gotten response body is not equal to expected body\")\nE           IndexError: list index out of range\n\ntests/test_cases.py:69: IndexError", "trace": "FAILURE: New json was not added\nassert 179 == 180\ntests/test_cases.py:67 in test_get() -> check.equal(final_size, initial_size+1, \"New json was not added\")\n------------------------------------------------------------\nFailed Checks: 1\n------------------------------------------------------------\n@allure.title(\"Get method check in case of a correct payload\")\n    def test_get():\n        try:\n            random_payload = {\n            \"timestamp\": time.time(),\n            \"number\": random.randint(1, 100)\n            }\n            response = request.get()\n            initial_size = len(response.json())\n            #response_post=request.post(json.dumps(random_payload))\n            response = request.get()\n            response_body = response.json()\n            final_size = len(response_body)\n    \n            check.equal(final_size, initial_size+1, \"New json was not added\")\n            del response_body[final_size-1]['_id']\n>           check.equal(response_body[final_size],random_payload,\"Last gotten response body is not equal to expected body\")\nE           IndexError: list index out of range\n\ntests/test_cases.py:69: IndexError"}, "start": 1654723674138, "stop": 1654723674985, "uuid": "797642f2-9191-4047-9b0a-b8af0510e680", "historyId": "2b92b699695a9523974c6c24893482f5", "testCaseId": "7537be7ec288323126f37ef343b9dbe9", "fullName": "tests.test_cases#test_get", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cases"}, {"name": "host", "value": "KSargsyanL2M"}, {"name": "thread", "value": "56275-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cases"}]}